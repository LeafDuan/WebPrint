<?xml version="1.0" encoding="utf-8" ?>
<log4net>
  <!-- 
  If you are looking here and want more output, 
  first thing to do is change root/level/@value to "INFO" or "ALL" 
  -->
  <root>
    <!-- Value of level may be ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF -->
    <level value="WARN" />
    <appender-ref ref="error-file" />
    <appender-ref ref="debug-file" />
  </root>

  <logger name="NHibernate">
    <level value="WARN" />
  </logger>

  <logger name="NHibernate.SQL">
    <level value="DEBUG" />
    <appender-ref ref="nhibernate-file"/>
  </logger>

  <logger name="NHibernate.Cache">
    <!-- this source is very verbose - setting priority here to avoid flooding trace if root priority is lowered -->
    <level value="ERROR" />
    <appender-ref ref="nhibernate-file"/>
  </logger>

  <logger name="NHibernate.AdoNet.AbstractBatcher">
    <!-- Displays failed table statements that are otherwise intercepted and rendered when unexpected -->
    <level value="OFF" />
  </logger>

  <logger name="NHibernate.Util.ADOExceptionReporter">
    <!-- Displays failed table statements that are otherwise intercepted and rendered when unexpected -->
    <level value="OFF" />
  </logger>

  <appender name="debugger" type="log4net.Appender.DebugAppender">
    <!-- debugger: visual studio, if attached -->
    <immediateFlush value="true" />
    <layout type="log4net.Layout.SimpleLayout" />
  </appender>

  <appender name="debug-file" type="log4net.Appender.RollingFileAppender">
    <!-- debug log: all messages, based on logger priority settings of namespaces above -->
    <file value="App_Data/Logs/debug" />
    <appendToFile value="true" />
    <!-- immediate flush on error log, to avoid data loss with sudden termination -->
    <immediateFlush value="true" />
    <staticLogFileName value="false" />
    <rollingStyle value="Date" />
    <datePattern value=".yyyy.MM.dd'.log'" />
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %logger - %message%newline" />
    </layout>
  </appender>
  
  <appender name="error-file" type="log4net.Appender.RollingFileAppender">
    <!-- error log: only ERROR and FATAL subset of debug log -->
    <file value="App_Data/Logs/error" />
    <appendToFile value="true" />
    <!-- immediate flush on error log, to avoid data loss with sudden termination -->
    <immediateFlush value="true" />
    <staticLogFileName value="false" />
    <rollingStyle value="Date" />
    <datePattern value=".yyyy.MM.dd'.log'" />
    <!-- prevent locking error messages -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <filter type="log4net.Filter.LevelRangeFilter">
      <!-- only error and fatal messages end up in this target, even if child loggers accept lower priority -->
      <levelMin value="ERROR" />
    </filter>
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %logger - %message%newline" />
    </layout>
  </appender>

  <appender name="nhibernate-file" type="log4net.Appender.RollingFileAppender">
    <file value="App_Data/Logs/nhibernate"/>
    <appendToFile value="true"/>
    <immediateFlush value="true"/>
    <staticLogFileName value="false"/>
    <rollingStyle value="Date"/>
    <datePattern value=".yyyy.MM.dd'.log'"/>
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <filter type="log4net.Filter.LoggerMatchFilter">
      <loggerToMatch value="NHibernate"/>
    </filter>
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %logger - %message%newline%newline"/>
    </layout>
  </appender>
</log4net>
